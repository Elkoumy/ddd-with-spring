@startuml
boundary SomeClient as "Some Client" order 5
participant ScoringApplicationService as "Scoring\nApplication\nService" order 10
participant ScoringDomainServiceCommand as "Scoring\nDomain\nService\nCommand" order 70
participant ApplicantClusterRepository as "Applicant\nCluster\nRepository" order 30
participant AgencyResultClusterRepository as "AgencyResult\nCluster\nRepository" order 40
participant MonthlyHouseholdBalanceClusterRespository as "Monthly\nHouseholdBalance\nCluster\nRespository" order 50
participant RealEstateFinancingClusterRepository as "RealEstate\nFinancing\nCluster\nRepository" order 60

SomeClient -> ScoringApplicationService: performPreScoring(applicationNumber)\nor\nperformMainScoring(applicationNumber)

ScoringApplicationService -> ScoringApplicationService: performAuthentication
ScoringApplicationService -> ScoringApplicationService: startTransaction
group Retrieve aggregates for all of the clusters
ScoringApplicationService -> ApplicantClusterRepository: findByScoringId(scoringId)
ApplicantClusterRepository --> ScoringApplicationService: ApplicantCluster
ScoringApplicationService -> AgencyResultClusterRepository: findByAgencyResultId(agencyResultId)
AgencyResultClusterRepository --> ScoringApplicationService: AgencyResultCluster
ScoringApplicationService -> MonthlyHouseholdBalanceClusterRespository: findByScoringId(scoringId)
MonthlyHouseholdBalanceClusterRespository --> ScoringApplicationService: MonthlyHouseholdBalanceCluster
ScoringApplicationService -> RealEstateFinancingClusterRepository: findByScoringId(scoringId)
RealEstateFinancingClusterRepository -> ScoringApplicationService: RealEstateFinancingCluster
end

group Perform the actual scoring in the domain service
ScoringApplicationService -> ScoringDomainServiceCommand: new(scoringType, applicationNumber)
ScoringApplicationService -> ScoringDomainServiceCommand: addApplicantCluster(applicantCluster)
ScoringApplicationService -> ScoringDomainServiceCommand: addAgencyResultCluster(agencyResultCluster)
ScoringApplicationService -> ScoringDomainServiceCommand: addMonthlyHouseholdBalanceCluster(monthlyHouseholdBalanceCluster)
ScoringApplicationService -> ScoringDomainServiceCommand: addRealEstateFinancingCluster(realEstateFinancingCluster)
ScoringApplicationService -> ScoringDomainServiceCommand: execute()
ScoringDomainServiceCommand --> ScoringApplicationService: ScoringColor or Pre/MainScoringPerformedRed/GreenEvent
end

ScoringApplicationService -> ScoringApplicationService: commitTransaction
ScoringApplicationService --> SomeClient: ScoringColor
@enduml